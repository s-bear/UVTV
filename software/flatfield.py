# -*- coding: utf-8 -*-
"""
Created on Thu Dec 19 12:16:11 2019

@author: Laurie
"""
import numpy as np

flat_field = np.ones((8, 12, 5))

red = np.array([37234, 38220, 45406, 36996, 47032, 38157, 47659, 46369, 47739, 38128, 48576, 37785, 46195, 44075, 44058, 38684, 44730, 37274, 43748, 46213, 38081, 45614, 40902, 38931, 44204, 44855, 44139, 36065, 43025, 40134, 46172, 36111, 45560, 46707, 47795, 48658, 40139, 24966, 45981, 37787, 38678, 38726, 37703, 45791, 46726, 49171, 38919, 40383, 40923, 50797, 46622, 49246, 37723, 49565, 49200, 47848, 41862, 49121, 45441, 50586, 51197, 49462, 39319, 42317, 48331, 42223, 52133, 38774, 42109, 49902, 42059, 54588, 39430, 39832, 47827, 46558, 44123, 52793, 40328, 49671, 52065, 43594, 54488, 48714, 51608, 41112, 39789, 53270, 40252, 53289, 51232, 44307, 42959, 45186, 44760, 45063])
green = np.array([35929, 35234, 35539, 35532, 33397, 30674, 32041, 34031, 33828, 35102, 32012, 34109, 35804, 31141, 31283, 32824, 29799, 32492, 35663, 34112, 32099, 33893, 32381, 34423, 31953, 30625, 30264, 32501, 32030, 31510, 31639, 33647, 31965, 33143, 34692, 35119, 33762, 23398, 30809, 32860, 32318, 32103, 31598, 31289, 32277, 32353, 33136, 35462, 33019, 33868, 30051, 32634, 33075, 30921, 33702, 33840, 31645, 32638, 32448, 32505, 31771, 34427, 31256, 32671, 32344, 34487, 36035, 32307, 34751, 32624, 33489, 34930, 33159, 32329, 33244, 32097, 34078, 34078, 31349, 32364, 34905, 32778, 32356, 33197, 33478, 37056, 33463, 33776, 31825, 31231, 33197, 32005, 32343, 33342, 36746, 35105])
blue = np.array([60433, 55835, 59272, 55562, 59991, 57370, 62775, 58514, 57320, 58729, 57352, 60608, 62191, 56811, 56407, 56833, 56163, 55574, 58259, 57962, 55881, 59970, 56290, 60872, 59131, 54590, 54809, 56150, 56361, 54542, 55973, 61079, 58104, 58341, 56021, 61316, 60622, 57221, 52813, 57257, 57915, 56667, 54771, 54055, 59286, 56307, 58122, 58511, 61626, 56245, 55707, 55510, 55682, 57553, 57492, 58834, 56155, 59258, 57001, 59751, 57012, 57931, 59289, 57842, 57811, 57267, 56283, 58029, 57056, 58905, 60050, 62965, 59367, 57721, 55166, 61357, 59314, 54010, 57983, 56147, 58850, 60140, 58824, 64343, 61510, 59326, 57869, 58898, 59910, 59244, 57402, 63607, 57530, 64272, 58740, 65535])
violet = np.array([41241, 40143, 39548, 39962, 39270, 41758, 40380, 40324, 40271, 39755, 40476, 40865, 40175, 40038, 39801, 39228, 39828, 40399, 39235, 40042, 39947, 39817, 40384, 39125, 40436, 39925, 39928, 41361, 39123, 39210, 39033, 39392, 39775, 39819, 39667, 41151, 40214, 39534, 39577, 39544, 38502, 31556, 39237, 38571, 40138, 39748, 39896, 39042, 39557, 40171, 47580, 40271, 39775, 38835, 38787, 40263, 38983, 38566, 39862, 40351, 39970, 40951, 39419, 41909, 39730, 41075, 39041, 39480, 40028, 40974, 38284, 39860, 40605, 40902, 39845, 40616, 34175, 41371, 40448, 39697, 40659, 38812, 40198, 39512, 40550, 40342, 41163, 36340, 40843, 39481, 39888, 40375, 39390, 40375, 40813, 41035])
uv = np.array([24649, 28751, 28625, 29466, 27716, 25391, 25391, 28275, 27220, 28073, 29251, 28195, 28839, 27350, 26239, 26003, 27660, 23750, 28589, 28274, 25966, 29226, 28321, 28692, 27372, 28367, 25454, 28856, 26014, 27621, 27851, 21248, 27795, 26367, 29384, 29974, 27900, 27732, 28899, 25250, 26382, 23956, 26090, 26375, 26237, 27138, 29497, 26499, 28569, 27996, 24378, 24133, 28431, 23344, 26934, 27287, 27642, 28302, 24544, 26721, 29229, 29112, 24563, 28521, 27551, 21849, 26044, 28795, 26074, 29672, 27133, 28432, 28928, 29210, 29010, 24120, 29316, 25971, 28257, 28002, 25500, 28147, 27060, 28928, 30756, 25586, 25398, 30307, 28024, 25269, 26982, 26730, 26710, 24732, 28891, 28162])
flat_field[..., 0] = red.reshape((8, 12))
flat_field[..., 1] = green.reshape((8, 12))
flat_field[..., 2] = blue.reshape((8, 12))
flat_field[..., 3] = violet.reshape((8, 12))
flat_field[..., 4] = uv.reshape((8, 12))

dotcorrect = np.min(flat_field, (0,1))/flat_field

#the other settings:
mode = {'dsprpt':True, 'espwm':True}
maxcurrent = np.array([8, 8, 3.2, 15.9])
brightness = np.array([0.42, 0.58, 0.5, 0.81])

np.savez('panel_settings.npz', dotcorrect=dotcorrect, mode=mode, maxcurrent=maxcurrent, brightness=brightness)


#save the flatfield settings to the control board's memory:

from serial import Serial
from TLC5955 import SCPIProtocol, SCPIException, TLC5955

########################################### SET PORT NAME ###############################################
PORTNAME = 'COM4'

#convert to what the controller wants
mode = TLC5955.mode_code(**mode) #unpack the dict and give it to mode_code as arguments
maxcurrent = [TLC5955.maxcurrent_code(mc) for mc in maxcurrent]
brightness = [int(TLC5955.brightness_code(bc)) for bc in brightness]
dotcorrect = TLC5955.dotcorrect_code(dotcorrect)

# Connect to panel and set the settings
with Serial(PORTNAME) as port:
    with SCPIProtocol(port) as scpi:
        #first thing, turn off echo because it's annoying
        try:
            resp = scpi.command(b'syst:comm:echo off', True, timeout=1)
        except SCPIException:
            pass
        #set the settings
        scpi.command('disp:mode {}'.format(mode))
        scpi.command('disp:maxc {}'.format(','.join('{}'.format(mc) for mc in maxcurrent)))
        scpi.command('disp:bri {}'.format(','.join('{}'.format(bc) for bc in brightness)))
        scpi.command(b'disp:dotc:all ' + scpi.format_bytes(dotcorrect.tobytes()))
        #save the settings
        scpi.command('disp:save')