# -*- coding: utf-8 -*-
"""
Created on Thu Dec 19 12:16:11 2019

@author: Laurie
"""
import numpy as np

flat_field = np.ones((8, 12, 5))

red = np.array([19527, 19478, 23992, 19348, 23140, 18992, 23985, 23338, 25496, 19946, 23828, 20285, 23634, 22330, 22943, 19182, 23005, 19813, 23081, 22933, 21516, 23129, 20386, 21145, 23023, 23061, 22766, 19756, 18887, 19397, 22779, 19996, 24042, 24584, 22012, 23740, 20255, 16072, 22123, 19622, 19549, 19663, 19808, 22444, 23162, 22932, 19919, 19532, 19479, 23357, 22387, 23587, 19063, 22829, 23604, 22558, 20336, 23395, 19703, 24324, 23592, 22857, 18782, 18797, 22290, 20637, 22289, 19146, 19765, 22656, 20291, 23442, 20180, 19208, 23325, 22077, 21275, 23271, 20239, 23043, 23656, 18447, 23124, 19802, 24076, 20277, 19943, 23210, 21218, 22858, 23108, 20298, 19789, 19483, 20757, 20998])
green = np.array([40852, 42235, 39707, 40948, 41288, 40969, 44011, 42286, 41731, 41575, 41158, 40650, 40103, 41329, 44160, 42654, 39355, 40490, 40267, 39296, 42846, 40702, 40024, 42621, 40422, 39960, 38356, 40097, 41141, 41723, 40133, 40358, 39620, 39408, 41456, 41477, 41925, 36350, 43452, 38670, 39067, 59558, 40045, 38481, 39537, 40522, 40608, 39181, 40849, 42560, 40096, 39829, 39354, 42274, 39835, 43083, 42124, 40202, 39810, 39872, 40713, 42569, 39488, 40645, 38366, 41803, 39088, 40772, 38359, 42116, 38687, 40174, 41613, 41099, 40110, 40436, 40362, 39787, 41632, 0, 41828, 38794, 39375, 40427, 40219, 41819, 40763, 41351, 40907, 39678, 41567, 39972, 42585, 40746, 40310, 41314])
blue = np.array([18391, 16812, 17992, 16718, 18239, 17339, 19196, 17732, 17322, 17806, 17333, 18452, 18995, 17147, 17009, 17155, 16925, 16722, 17644, 17543, 16828, 18232, 16968, 23302, 17944, 16384, 16460, 16920, 16993, 16368, 16860, 18613, 17591, 17673, 16876, 18695, 18456, 17288, 15774, 17300, 17526, 17098, 16447, 17231, 17997, 16974, 17598, 17731, 18801, 16953, 16768, 16700, 16760, 17402, 17381, 17842, 16922, 17988, 17213, 18157, 17216, 17532, 17998, 17501, 17491, 17304, 16966, 17566, 17232, 17867, 18260, 19261, 18025, 17460, 16582, 18709, 18007, 16185, 17550, 16919, 17847, 18291, 17839, 19735, 18761, 18011, 17511, 17864, 18212, 17983, 17350, 19482, 17394, 19710, 17810, 20510])
violet = np.array([39700, 40886, 41374, 40362, 41075, 43760, 43131, 40843, 41662, 45803, 44154, 46753, 41323, 48629, 40990, 41101, 41854, 42554, 44405, 43767, 41373, 42047, 42040, 40780, 39259, 41202, 39188, 41546, 40141, 42500, 39494, 42159, 41089, 41893, 42624, 42986, 39418, 42721, 38991, 41026, 40011, 43303, 42000, 41051, 40299, 41064, 42803, 38956, 44053, 42097, 39008, 41996, 43496, 39519, 40173, 40196, 44785, 38832, 46528, 40670, 40415, 45521, 41442, 43360, 40027, 42071, 39990, 40172, 42090, 40448, 41747, 41810, 43131, 40213, 44833, 40996, 39903, 40249, 40710, 41966, 40827, 47388, 41420, 45706, 41279, 43870, 40809, 44433, 41981, 41552, 40386, 42959, 42952, 41902, 41650, 42675])
uv = np.array([37903, 42322, 41069, 43064, 41255, 41147, 45194, 42922, 40792, 40887, 44210, 42938, 41751, 40894, 40629, 41145, 42781, 44211, 42836, 43957, 41540, 43611, 43267, 42037, 42194, 42832, 38623, 44657, 40561, 42299, 42643, 42429, 42908, 41501, 43265, 43155, 40876, 41701, 43066, 40705, 40792, 45194, 40511, 43330, 41816, 43991, 44658, 40516, 41675, 41672, 42894, 41150, 42334, 43840, 41849, 44406, 44934, 43069, 41870, 41498, 41806, 44062, 40355, 43007, 43252, 41617, 40406, 45110, 41766, 43458, 43447, 42498, 42915, 45087, 44138, 44760, 42445, 43977, 42574, 43855, 44369, 43490, 42094, 43251, 43940, 41702, 42837, 43324, 43610, 41824, 42598, 43516, 41844, 40980, 44222, 42889])
flat_field[..., 0] = red.reshape((8, 12))
flat_field[..., 1] = green.reshape((8, 12))
flat_field[..., 2] = blue.reshape((8, 12))
flat_field[..., 3] = violet.reshape((8, 12))
flat_field[..., 4] = uv.reshape((8, 12))

dotcorrect = np.min(flat_field, (0,1))/flat_field

#the other settings:
mode = {'dsprpt':True, 'espwm':True}
maxcurrent = np.array([8, 8, 3.2, 15.9])
brightness = np.array([0.42, 0.58, 0.5, 0.81])

np.savez('panel_settings.npz', dotcorrect=dotcorrect, mode=mode, maxcurrent=maxcurrent, brightness=brightness)


#save the flatfield settings to the control board's memory:

from serial import Serial
from TLC5955 import SCPIProtocol, SCPIException, TLC5955

########################################### SET PORT NAME ###############################################
PORTNAME = 'COM8'

#convert to what the controller wants
mode = TLC5955.mode_code(**mode) #unpack the dict and give it to mode_code as arguments
maxcurrent = [TLC5955.maxcurrent_code(mc) for mc in maxcurrent]
brightness = [int(TLC5955.brightness_code(bc)) for bc in brightness]
dotcorrect = TLC5955.dotcorrect_code(dotcorrect)

# Connect to panel and set the settings
with Serial(PORTNAME) as port:
    with SCPIProtocol(port) as scpi:
        #first thing, turn off echo because it's annoying
        try:
            resp = scpi.command(b'syst:comm:echo off', True, timeout=1)
        except SCPIException:
            pass
        #set the settings
        scpi.command('disp:mode {}'.format(mode))
        scpi.command('disp:maxc {}'.format(','.join('{}'.format(mc) for mc in maxcurrent)))
        scpi.command('disp:bri {}'.format(','.join('{}'.format(bc) for bc in brightness)))
        scpi.command(b'disp:dotc:all ' + scpi.format_bytes(dotcorrect.tobytes()))
        #save the settings
        scpi.command('disp:save')